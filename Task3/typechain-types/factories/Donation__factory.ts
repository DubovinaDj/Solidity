/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Donation, DonationInterface } from "../Donation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "Index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "goal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raised",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_goal",
        type: "uint256",
      },
    ],
    name: "createCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNFTAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerDonated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setNFTAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060055534801561001557600080fd5b5061003261002761003760201b60201c565b61003f60201b60201c565b610103565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114b8806101126000396000f3fe60806040526004361061009c5760003560e01c806395ed5f1d1161006457806395ed5f1d14610179578063a318f269146101b6578063b9618478146101df578063f14faf6f1461020a578063f2fde38b14610226578063f6b4dfb41461024f5761009c565b8063141961bc146100a15780635ace4d96146100e357806369d037381461010e578063715018a6146101375780638da5cb5b1461014e575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610e7f565b61027a565b6040516100da96959493929190610ff9565b60405180910390f35b3480156100ef57600080fd5b506100f86103d3565b60405161010591906110e8565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610dc3565b6103d9565b005b34801561014357600080fd5b5061014c610499565b005b34801561015a57600080fd5b50610163610521565b6040516101709190610fc3565b60405180910390f35b34801561018557600080fd5b506101a0600480360381019061019b9190610dc3565b61054a565b6040516101ad9190610fde565b60405180910390f35b3480156101c257600080fd5b506101dd60048036038101906101d89190610dec565b61056a565b005b3480156101eb57600080fd5b506101f46106d5565b6040516102019190610fc3565b60405180910390f35b610224600480360381019061021f9190610e7f565b6106ff565b005b34801561023257600080fd5b5061024d60048036038101906102489190610dc3565b610a8f565b005b34801561025b57600080fd5b50610264610b87565b6040516102719190610fc3565b60405180910390f35b600360205280600052604060002060009150905080600001805461029d90611289565b80601f01602080910402602001604051908101604052809291908181526020018280546102c990611289565b80156103165780601f106102eb57610100808354040283529160200191610316565b820191906000526020600020905b8154815290600101906020018083116102f957829003601f168201915b50505050509080600101805461032b90611289565b80601f016020809104026020016040519081016040528092919081815260200182805461035790611289565b80156103a45780601f10610379576101008083540402835291602001916103a4565b820191906000526020600020905b81548152906001019060200180831161038757829003601f168201915b5050505050908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b60055481565b6103e1610bad565b73ffffffffffffffffffffffffffffffffffffffff166103ff610521565b73ffffffffffffffffffffffffffffffffffffffff1614610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044c906110c8565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6104a1610bad565b73ffffffffffffffffffffffffffffffffffffffff166104bf610521565b73ffffffffffffffffffffffffffffffffffffffff1614610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c906110c8565b60405180910390fd5b61051f6000610bb5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915054906101000a900460ff1681565b610572610bad565b73ffffffffffffffffffffffffffffffffffffffff16610590610521565b73ffffffffffffffffffffffffffffffffffffffff16146105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd906110c8565b60405180910390fd5b6000806001600560008282546105fc9190611175565b925050819055506040518060c0016040528087815260200186815260200142866106269190611175565b8152602001848152602001838152602001821515815250600360006005548152602001908152602001600020600082015181600001908051906020019061066e929190610c79565b50602082015181600101908051906020019061068b929190610c79565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff021916908315150217905550905050505050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036000828152602001908152602001600020600201544210610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e90611088565b60405180910390fd5b60036000828152602001908152602001600020600301546003600083815260200190815260200160002060040154106107c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bc906110a8565b60405180910390fd5b346003600083815260200190815260200160002060040160008282546107eb9190611175565b92505081905550600360008281526020019081526020016000206003015434600360008481526020019081526020016000206004015461082b9190611175565b11156108cf5760006003600083815260200190815260200160002060030154600360008481526020019081526020016000206004015461086b91906111cb565b90508060036000848152602001908152602001600020600401600082825461089391906111cb565b9250508190555060016003600084815260200190815260200160002060050160006101000a81548160ff02191690831515021790555050610934565b6003600082815260200190815260200160002060030154600360008381526020019081526020016000206004015414156109335760016003600083815260200190815260200160002060050160006101000a81548160ff0219169083151502179055505b5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a8c576001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b8152600401610a389190610fc3565b602060405180830381600087803b158015610a5257600080fd5b505af1158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a9190610ea8565b505b50565b610a97610bad565b73ffffffffffffffffffffffffffffffffffffffff16610ab5610521565b73ffffffffffffffffffffffffffffffffffffffff1614610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b02906110c8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7290611068565b60405180910390fd5b610b8481610bb5565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054610c8590611289565b90600052602060002090601f016020900481019282610ca75760008555610cee565b82601f10610cc057805160ff1916838001178555610cee565b82800160010185558215610cee579182015b82811115610ced578251825591602001919060010190610cd2565b5b509050610cfb9190610cff565b5090565b5b80821115610d18576000816000905550600101610d00565b5090565b6000610d2f610d2a84611128565b611103565b905082815260208101848484011115610d4757600080fd5b610d52848285611247565b509392505050565b600081359050610d6981611454565b92915050565b600082601f830112610d8057600080fd5b8135610d90848260208601610d1c565b91505092915050565b600081359050610da88161146b565b92915050565b600081519050610dbd8161146b565b92915050565b600060208284031215610dd557600080fd5b6000610de384828501610d5a565b91505092915050565b60008060008060808587031215610e0257600080fd5b600085013567ffffffffffffffff811115610e1c57600080fd5b610e2887828801610d6f565b945050602085013567ffffffffffffffff811115610e4557600080fd5b610e5187828801610d6f565b9350506040610e6287828801610d99565b9250506060610e7387828801610d99565b91505092959194509250565b600060208284031215610e9157600080fd5b6000610e9f84828501610d99565b91505092915050565b600060208284031215610eba57600080fd5b6000610ec884828501610dae565b91505092915050565b610eda816111ff565b82525050565b610ee981611211565b82525050565b6000610efa82611159565b610f048185611164565b9350610f14818560208601611256565b610f1d81611379565b840191505092915050565b6000610f35602683611164565b9150610f408261138a565b604082019050919050565b6000610f58601083611164565b9150610f63826113d9565b602082019050919050565b6000610f7b600d83611164565b9150610f8682611402565b602082019050919050565b6000610f9e602083611164565b9150610fa98261142b565b602082019050919050565b610fbd8161123d565b82525050565b6000602082019050610fd86000830184610ed1565b92915050565b6000602082019050610ff36000830184610ee0565b92915050565b600060c08201905081810360008301526110138189610eef565b905081810360208301526110278188610eef565b90506110366040830187610fb4565b6110436060830186610fb4565b6110506080830185610fb4565b61105d60a0830184610ee0565b979650505050505050565b6000602082019050818103600083015261108181610f28565b9050919050565b600060208201905081810360008301526110a181610f4b565b9050919050565b600060208201905081810360008301526110c181610f6e565b9050919050565b600060208201905081810360008301526110e181610f91565b9050919050565b60006020820190506110fd6000830184610fb4565b92915050565b600061110d61111e565b905061111982826112bb565b919050565b6000604051905090565b600067ffffffffffffffff8211156111435761114261134a565b5b61114c82611379565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006111808261123d565b915061118b8361123d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111c0576111bf6112ec565b5b828201905092915050565b60006111d68261123d565b91506111e18361123d565b9250828210156111f4576111f36112ec565b5b828203905092915050565b600061120a8261121d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611274578082015181840152602081019050611259565b83811115611283576000848401525b50505050565b600060028204905060018216806112a157607f821691505b602082108114156112b5576112b461131b565b5b50919050565b6112c482611379565b810181811067ffffffffffffffff821117156112e3576112e261134a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f43616d706169676e204661696c65642100000000000000000000000000000000600082015250565b7f476f616c20616368696576656400000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61145d816111ff565b811461146857600080fd5b50565b6114748161123d565b811461147f57600080fd5b5056fea26469706673582212208fd1299a0c8d91e5a5b49c4d0fc7853917c7a42432f44af2e9031e9dd2c512e364736f6c63430008040033";

type DonationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Donation__factory extends ContractFactory {
  constructor(...args: DonationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Donation> {
    return super.deploy(overrides || {}) as Promise<Donation>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Donation {
    return super.attach(address) as Donation;
  }
  connect(signer: Signer): Donation__factory {
    return super.connect(signer) as Donation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationInterface {
    return new utils.Interface(_abi) as DonationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Donation {
    return new Contract(address, _abi, signerOrProvider) as Donation;
  }
}
